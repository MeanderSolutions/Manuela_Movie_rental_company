/* QUERY 1 - used for the first insight*/
WITH t1 AS(SELECT 
		c.name as category, f.rental_duration, 
		CASE WHEN NTILE(4) OVER (ORDER BY f.rental_duration) = 1 THEN '1_first'
                     WHEN NTILE(4) OVER (ORDER BY f.rental_duration) = 2 THEN '2_second'
                     WHEN NTILE(4) OVER (ORDER BY f.rental_duration) = 3 THEN '3_third'
                     ELSE '4_fourth'
                     END AS standard_quartile
			FROM film f	
			JOIN film_category fc
			ON f.film_id = fc.film_id
			JOIN category c
			ON c.category_id = fc.category_id
			WHERE c.name IN ('Animation', 'Children', 'Classics','Comedy','Family','Music')
			ORDER BY 1, 3)
SELECT t1.category as category, t1.standard_quartile as standard_quartile,
	   COUNT(t1.category) as amount_of_movies
FROM t1
GROUP BY 1, 2;


/* QUERY 2 - used for the second insight */
WITH t1 AS(SELECT r.customer_id, 
				  CASE WHEN i.store_id = 1 THEN 'STORE 1'
                       ELSE 'STORE 2' END AS store_id,
	              EXTRACT(year from r.rental_date) as rental_year,
	              COUNT(r.rental_date) AS rental_count	   
		    FROM rental r
		    JOIN inventory i
		    ON i.inventory_id = r.inventory_id
		    GROUP BY 1, 2, 3),
     t2 AS(SELECT t1.customer_id, t1.store_id, t1.rental_count,
	              SUM(t1.rental_count) OVER(PARTITION BY t1.store_id) as rental_per_store
		   FROM t1
	       WHERE t1.rental_year = 2005),
     t3 AS(SELECT t2.customer_id, t2.store_id, t2.rental_count, t2.rental_per_store,
				  DENSE_RANK() OVER(PARTITION BY t2.store_id ORDER BY t2.rental_count DESC) as top_counter
			FROM t2)
SELECT cu.first_name || ' ' || cu.last_name as customer,
	   t3.store_id as store, t3.rental_count as rental_count, t3.rental_per_store as rental_per_store, 
	   t3.top_counter as ranking
FROM t3
JOIN customer cu
ON cu.customer_id = t3.customer_id
WHERE t3.top_counter <= 3
ORDER BY 2, 3 DESC;


/* QUERY 3 - used for the third insight*/
SELECT DATE_TRUNC('month', p.payment_date) order_month,
	   CONCAT(cu.first_name, ' ', cu.last_name) as customer_fullname,
	   COUNT(p.amount) count_per_mon,
	   SUM(p.amount) sum_of_total_payments_each_month
FROM payment p
JOIN customer cu
ON cu.customer_id = p.customer_id
WHERE DATE_PART('year', p.payment_date) = '2007' 
AND p.customer_id IN (
					WITH t1 AS(SELECT p.customer_id as customer_id, SUM(p.amount) as total_amt_payment
		   					FROM payment p
		   					GROUP BY 1
		   					ORDER BY 2 DESC
		   					LIMIT 10)
					SELECT t1.customer_id
					FROM t1
					)
GROUP BY 1, 2 
ORDER BY 2, 1;


/* QUERY 4 - used for the forth insight*/
WITH t2 AS(SELECT DATE_TRUNC('month', p.payment_date) order_date,
			      CONCAT(cu.first_name, ' ', cu.last_name) as fullname,
			      COUNT(p.amount) count_per_mon,
			      SUM(p.amount) total_amt_payment
		   FROM payment p
		   JOIN customer cu
		   ON cu.customer_id = p.customer_id
		   WHERE DATE_PART('year', p.payment_date) = '2007' 
		   AND p.customer_id IN (
							WITH t1 AS(SELECT p.customer_id as customer_id, SUM(p.amount) as total_amt_payment
									FROM payment p
									GROUP BY 1
									ORDER BY 2 DESC
									LIMIT 10)
							SELECT t1.customer_id
							FROM t1
							)
		  GROUP BY 1, 2 
		  ORDER BY 2, 1)
SELECT t2.order_date as order_month, 
		t2.fullname as customer_fullname,
		t2.count_per_mon,
		t2.total_amt_payment,
		LEAD(t2.total_amt_payment) OVER (PARTITION BY t2.fullname ORDER BY t2.order_date) - t2.total_amt_payment as monthly_difference_in_payments

FROM t2
ORDER BY 5 DESC;







